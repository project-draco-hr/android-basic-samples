{
switch (newState) {
case STATE_MATCHUP:
    squish(mActivity.findViewById(R.id.login_layout));
  squish(mActivity.findViewById(R.id.gameplay_layout));
squish(mActivity.findViewById(R.id.metadata_layout));
fadeIn(mActivity.findViewById(R.id.matchup_layout),ACTION_CLEAR);
mActivity.refreshTurnsPending();
break;
case STATE_SIGNED_OUT:
fadeIn(mActivity.findViewById(R.id.login_layout));
mActivity.findViewById(R.id.sign_in_button).setVisibility(View.VISIBLE);
squish(mActivity.findViewById(R.id.gameplay_layout));
squish(mActivity.findViewById(R.id.metadata_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
break;
case STATE_GAME_START:
squish(mActivity.findViewById(R.id.login_layout));
fadeIn(mActivity.findViewById(R.id.gameplay_layout),ACTION_DRAW);
squish(mActivity.findViewById(R.id.metadata_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
break;
case STATE_REPLAY_METADATA:
squish(mActivity.findViewById(R.id.login_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
squish(mActivity.findViewById(R.id.gameplay_layout));
fadeIn(mActivity.findViewById(R.id.metadata_layout),ACTION_CLEAR);
mActivity.findViewById(R.id.continue_button).setVisibility(View.VISIBLE);
((TextView)mActivity.findViewById(R.id.metadataText)).setText("Time to watch your opponent guess on turn " + mActivity.mTurnData.replayTurn.turnNumber + ".");
mActivity.mMyRole=DrawingActivity.ROLE_NOTHING;
mActivity.mInstructionsView.setText("Watch your opponent guess.");
break;
case STATE_REPLAY:
squish(mActivity.findViewById(R.id.login_layout));
fadeIn(mActivity.findViewById(R.id.gameplay_layout),ACTION_REPLAY);
squish(mActivity.findViewById(R.id.matchup_layout));
squish(mActivity.findViewById(R.id.metadata_layout));
mActivity.setReplayUI();
break;
case STATE_GUESSING_METADATA:
squish(mActivity.findViewById(R.id.login_layout));
squish(mActivity.findViewById(R.id.gameplay_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
fadeIn(mActivity.findViewById(R.id.metadata_layout),ACTION_CLEAR);
mActivity.findViewById(R.id.continue_button).setVisibility(View.VISIBLE);
((TextView)mActivity.findViewById(R.id.metadataText)).setText("Now, it's your turn to guess on turn " + mActivity.mTurnData.guessingTurn.turnNumber + ".");
mActivity.mInstructionsView.setText("Touch a word to guess.");
mActivity.mMyRole=DrawingActivity.ROLE_GUESSER;
break;
case STATE_GUESSING:
squish(mActivity.findViewById(R.id.login_layout));
fadeIn(mActivity.findViewById(R.id.gameplay_layout),ACTION_GUESS);
squish(mActivity.findViewById(R.id.matchup_layout));
squish(mActivity.findViewById(R.id.metadata_layout));
mActivity.setGuessingUI();
break;
case STATE_NEW_TURN_METADATA:
squish(mActivity.findViewById(R.id.login_layout));
squish(mActivity.findViewById(R.id.gameplay_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
fadeIn(mActivity.findViewById(R.id.metadata_layout),ACTION_CLEAR);
mActivity.findViewById(R.id.continue_button).setVisibility(View.VISIBLE);
((TextView)mActivity.findViewById(R.id.metadataText)).setText("Time for you to draw on turn " + mActivity.mTurnData.artistTurn.turnNumber + ".");
mActivity.mInstructionsView.setText("Draw the word on the right.");
mActivity.mMyRole=DrawingActivity.ROLE_ARTIST;
break;
case STATE_NEW_TURN:
squish(mActivity.findViewById(R.id.login_layout));
fadeIn(mActivity.findViewById(R.id.gameplay_layout),ACTION_DRAW);
squish(mActivity.findViewById(R.id.metadata_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
mActivity.setArtistUI();
break;
case STATE_SENDING:
squish(mActivity.findViewById(R.id.login_layout));
squish(mActivity.findViewById(R.id.gameplay_layout));
squish(mActivity.findViewById(R.id.matchup_layout));
fadeIn(mActivity.findViewById(R.id.metadata_layout),ACTION_SEND);
mActivity.findViewById(R.id.continue_button).setVisibility(View.INVISIBLE);
((TextView)mActivity.findViewById(R.id.metadataText)).setText("Sending turn: " + mActivity.mTurnData.artistTurn.turnNumber);
break;
}
state=newState;
}
