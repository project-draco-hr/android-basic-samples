{
  super.onActivityResult(requestCode,responseCode,intent);
switch (requestCode) {
case RC_SELECT_PLAYERS:
    handleSelectPlayersResult(responseCode,intent);
  break;
case RC_INVITATION_INBOX:
handleInvitationInboxResult(responseCode,intent);
break;
case RC_WAITING_ROOM:
if (responseCode == Activity.RESULT_OK) {
Log.d(TAG,"Starting game (waiting room returned OK).");
startGame(true);
}
 else if (responseCode == GamesActivityResultCodes.RESULT_LEFT_ROOM) {
leaveRoom();
}
 else if (responseCode == Activity.RESULT_CANCELED) {
leaveRoom();
}
break;
case RC_SIGN_IN:
Log.d(TAG,"onActivityResult with requestCode == RC_SIGN_IN, responseCode=" + responseCode + ", intent="+ intent);
mSignInClicked=false;
mResolvingConnectionFailure=false;
if (responseCode == RESULT_OK) {
mGoogleApiClient.connect();
}
 else {
BaseGameUtils.showActivityResultError(this,requestCode,responseCode,R.string.signin_other_error);
}
break;
}
super.onActivityResult(requestCode,responseCode,intent);
}
