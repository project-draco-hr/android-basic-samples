{
  if (mLoadingDialog == null) {
    mLoadingDialog=new ProgressDialog(this);
    mLoadingDialog.setMessage(getString(R.string.loading_from_cloud));
  }
  mLoadingDialog.show();
  AsyncTask<Void,Void,Integer> task=new AsyncTask<Void,Void,Integer>(){
    @Override protected Integer doInBackground(    Void... params){
      Snapshots.OpenSnapshotResult result;
      if (snapshotMetadata != null && snapshotMetadata.getUniqueName() != null) {
        Log.i(TAG,"Opening snapshot by metadata: " + snapshotMetadata);
        result=Games.Snapshots.open(mGoogleApiClient,snapshotMetadata).await();
      }
 else {
        Log.i(TAG,"Opening snapshot by name: " + currentSaveName);
        result=Games.Snapshots.open(mGoogleApiClient,currentSaveName,true).await();
      }
      int status=result.getStatus().getStatusCode();
      Snapshot snapshot=null;
      if (status == GamesStatusCodes.STATUS_OK) {
        snapshot=result.getSnapshot();
      }
 else       if (status == GamesStatusCodes.STATUS_SNAPSHOT_CONFLICT) {
        snapshot=processSnapshotOpenResult(RC_LOAD_SNAPSHOT,result,0);
        if (snapshot != null) {
          status=GamesStatusCodes.STATUS_OK;
        }
 else {
          Log.w(TAG,"Conflict was not resolved automatically");
        }
      }
 else {
        Log.e(TAG,"Error while loading: " + status);
      }
      if (snapshot != null) {
        readSavedGame(snapshot);
      }
      return status;
    }
    @Override protected void onPostExecute(    Integer status){
      Log.i(TAG,"Snapshot loaded: " + status);
      if (status == GamesStatusCodes.STATUS_SNAPSHOT_NOT_FOUND) {
        Log.i(TAG,"Error: Snapshot not found");
        Toast.makeText(getBaseContext(),"Error: Snapshot not found",Toast.LENGTH_SHORT).show();
      }
 else       if (status == GamesStatusCodes.STATUS_SNAPSHOT_CONTENTS_UNAVAILABLE) {
        Log.i(TAG,"Error: Snapshot contents unavailable");
        Toast.makeText(getBaseContext(),"Error: Snapshot contents unavailable",Toast.LENGTH_SHORT).show();
      }
 else       if (status == GamesStatusCodes.STATUS_SNAPSHOT_FOLDER_UNAVAILABLE) {
        Log.i(TAG,"Error: Snapshot folder unavailable");
        Toast.makeText(getBaseContext(),"Error: Snapshot folder unavailable.",Toast.LENGTH_SHORT).show();
      }
      if (mLoadingDialog != null) {
        mLoadingDialog.dismiss();
        mLoadingDialog=null;
      }
      hideAlertBar();
      updateUi();
    }
  }
;
  task.execute();
}
