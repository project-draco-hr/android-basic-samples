{
switch (view.getId()) {
case R.id.button_sign_in:
    if (!BaseGameUtils.verifySampleSetup(this,R.string.app_id)) {
      Log.w(TAG,"*** Warning: setup problems detected. Sign in may not work!");
    }
  Log.d(TAG,"Sign-in button clicked");
mSignInClicked=true;
mGoogleApiClient.connect();
break;
case R.id.button_sign_out:
mSignInClicked=false;
Games.signOut(mGoogleApiClient);
mGoogleApiClient.disconnect();
showSignInBar();
mSaveGame=new SaveGame();
updateUi();
break;
case R.id.button_next_world:
if (mGoogleApiClient == null || !mGoogleApiClient.isConnected()) {
BaseGameUtils.makeSimpleDialog(this,getString(R.string.please_sign_in)).show();
return;
}
if (mWorld < WORLD_MAX) {
mWorld++;
updateUi();
}
break;
case R.id.button_prev_world:
if (mGoogleApiClient == null || !mGoogleApiClient.isConnected()) {
BaseGameUtils.makeSimpleDialog(this,getString(R.string.please_sign_in)).show();
return;
}
if (mWorld > WORLD_MIN) {
mWorld--;
updateUi();
}
break;
default :
if (mGoogleApiClient == null || !mGoogleApiClient.isConnected()) {
BaseGameUtils.makeSimpleDialog(this,getString(R.string.please_sign_in)).show();
return;
}
for (int i=0; i < LEVEL_BUTTON_IDS.length; ++i) {
if (view.getId() == LEVEL_BUTTON_IDS[i]) {
launchLevel(i + 1);
return;
}
}
}
}
