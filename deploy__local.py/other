from argparse import ArgumentParser
import os
import shutil
import subprocess
from xml.etree import ElementTree
default_pom_template = '\n<?xml version="1.0" encoding="UTF-8"?>\n<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>{groupId}</groupId>\n  <artifactId>{artifactId}</artifactId>\n  <version>{version}</version>\n  <packaging>{packaging}</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>com.android.support</groupId>\n      <artifactId>support-v4</artifactId>\n      <version>19.1.0</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n'
if (__name__ == '__main__'):
    parser = ArgumentParser("Register a package with Android's fake Maven repo")
    parser.add_argument('-r', '--repository-path', help='Path to local Android repository (defaults to $ANDROID_HOME/extras/google/m2repository)', dest='repo_path', required=False, default=(os.environ['ANDROID_HOME'] + '/extras/google/m2repository'))
    parser.add_argument('-f', '--archive-file', help='Archive file to register', dest='archive_file', required=True)
    parser.add_argument('-p', '--package', help='Fully qualified package name to register', dest='pkg', required=True)
    parser.add_argument('-v', '--version', help='package version number', dest='ver', required=True)
    args = parser.parse_args()
    deploy_local(args.repo_path, args.archive_file, args.pkg, args.ver)
