{
  for (  int expectedState : expectedStates) {
    if (mState == expectedState) {
      return true;
    }
  }
  StringBuilder sb=new StringBuilder();
  if (type == TYPE_DEVELOPER_ERROR) {
    sb.append("GameHelper: you attempted an operation at an invalid. ");
  }
 else {
    sb.append("GameHelper: bug detected. Please report it at our bug tracker ");
    sb.append("https://github.com/playgameservices/android-samples/issues. ");
    sb.append("Please include the last couple hundred lines of logcat output ");
    sb.append("and describe the operation that caused this. ");
  }
  sb.append("Explanation: ").append(warning);
  sb.append("Operation: ").append(operation).append(". ");
  sb.append("State: ").append(STATE_NAMES[mState]).append(". ");
  if (expectedStates.length == 1) {
    sb.append("Expected state: ").append(STATE_NAMES[expectedStates[0]]).append(".");
  }
 else {
    sb.append("Expected states:");
    for (    int expectedState : expectedStates) {
      sb.append(" ").append(STATE_NAMES[expectedState]);
    }
    sb.append(".");
  }
  logWarn(sb.toString());
  return false;
}
